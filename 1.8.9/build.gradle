plugins {
    id 'java'
	id "fabric-loom" version "1.1.+"
}

group = maven_group
version = "${project.version}+${project.minecraft_18}"
archivesBaseName = "AxolotlClient-config"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
	maven {
		url = "https://moehreag.duckdns.org/maven/releases"
	}
	maven {
		name = "legacy-fabric"
		url = "https://repo.legacyfabric.net/repository/legacyfabric/"
	}
	mavenLocal()
	mavenCentral()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_18}"
	mappings "net.legacyfabric:yarn:${project.mappings_18}"

	modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader}"

	modImplementation include("io.github.moehreag:LegacyClientCommands:1.0.0")

	modImplementation "net.legacyfabric.legacy-fabric-api:legacy-fabric-api:${project.lfapi}+${project.minecraft_18}"

	modCompileOnlyApi(files("libs/legacy-modmenu-1.2.0+1.8.9-dev.jar"))

	implementation include(project(":common"))

	localRuntime("org.ow2.asm:asm-tree:9.4")

	modRuntimeOnly ("com.github.zarzelcow:legacy-lwjgl3:1.0.0") {
		exclude group: 'org.lwjgl', module: 'lwjgl-glfw'
		exclude group: 'org.lwjgl', module: 'lwjgl-openal'
		exclude group: 'org.lwjgl', module: 'lwjgl-opengl'
		exclude group: 'org.lwjgl', module: 'lwjgl'
	}
	implementation include ("org.lwjgl:lwjgl-nanovg:3.3.2")
	include runtimeOnly ('org.lwjgl:lwjgl-nanovg:3.3.2:natives-linux')
	include runtimeOnly ('org.lwjgl:lwjgl-nanovg:3.3.2:natives-linux-arm64')
	include runtimeOnly ('org.lwjgl:lwjgl-nanovg:3.3.2:natives-windows')
	include runtimeOnly ('org.lwjgl:lwjgl-nanovg:3.3.2:natives-windows-arm64')
	include runtimeOnly ('org.lwjgl:lwjgl-nanovg:3.3.2:natives-macos')
	include runtimeOnly ('org.lwjgl:lwjgl-nanovg:3.3.2:natives-macos-arm64')

	api "org.slf4j:slf4j-simple:1.7.30"
	api "org.slf4j:slf4j-api:1.7.30"
}

processResources {
	inputs.property 'version', version

	filesMatching('fabric.mod.json') {
		expand "version": version
	}
}

runClient {
	classpath(sourceSets.test.runtimeClasspath)
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = archivesBaseName
			from components.java
		}
	}

	repositories {
		maven {
			name = "owlMaven"
			def repository = project.version.toString().contains("beta") || project.version.toString().contains("alpha") ? "snapshots" : "releases"
			url = "https://moehreag.duckdns.org/maven/"+repository
			credentials(PasswordCredentials)
			authentication {
				basic(BasicAuthentication)
			}
		}
	}
}
