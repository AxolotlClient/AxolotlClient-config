plugins {
    id 'java'
	id "org.quiltmc.loom" version "1.3.+"
}

group = maven_group
version = "${project.version}+1.16"
archivesBaseName = "AxolotlClient-config"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
	maven {
		url = "https://moehreag.duckdns.org/maven/releases"
	}
	maven {
		url = "https://maven.terraformersmc.com/releases"
	}
	maven {
		name = 'CombatReforged'
		url = 'https://maven.fabric.rizecookey.net/'
	}
}

loom {
	setIntermediaryUrl('https://maven.fabric.rizecookey.net/net/fabricmc/intermediary/1.16_combat-6/intermediary-1.16_combat-6-v2.jar')
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_cts8}"
	mappings "net.fabricmc:yarn:${project.mappings_cts8}:v2"

	//modImplementation "net.fabricmc:fabric-loader:${fabric_loader}"
	//implementation "net.fabricmc:access-widener:2.1.0"
	modImplementation "org.quiltmc:quilt-loader:${project.quilt_loader}"

	//modApi "net.fabricmc.fabric-api:fabric-api:${project.fabric_cts8}"

	modApi(fabricApi.module("fabric-resource-loader-v0", project.fabric_cts8))
	modApi(fabricApi.module("fabric-key-binding-api-v1", project.fabric_cts8))
	modApi(fabricApi.module("fabric-lifecycle-events-v1", project.fabric_cts8))
	//modApi "net.fabricmc.fabric-api:fabric-resource-loader-v0:${project.fabric_cts8}"
	//modApi "net.fabricmc.fabric-api:fabric-key-binding-api-v1:${project.fabric_cts8}"
	//modApi "net.fabricmc.fabric-api:fabric-lifecycle-events-v1${project.fabric_cts8}"
	//modApi(fabricApi.module("fabric-screen-api-v1", project.fabric_cts8))
	//modApi(fabricApi.module("fabric-resource-loader-v0", project.fabric_cts8))
	/*modCompileOnlyApi("io.github.prospector:modmenu:1.14.9+build.14") {
		exclude(group: "net.fabricmc.fabric-api")
	}*/

	//modLocalRuntime
	modCompileOnlyApi("io.github.prospector:modmenu:1.14.9+build.14")

	implementation include(project(":common"))

	implementation include("org.lwjgl:lwjgl-nanovg:3.2.2")
	runtimeOnly include('org.lwjgl:lwjgl-nanovg:3.2.2:natives-linux')
	runtimeOnly include('org.lwjgl:lwjgl-nanovg:3.2.2:natives-windows')
	runtimeOnly include('org.lwjgl:lwjgl-nanovg:3.2.2:natives-macos')
}

processResources {
	inputs.property 'version', version

	filesMatching('fabric.mod.json') {
		expand "version": version
	}
}

runClient {
	classpath(sourceSets.test.runtimeClasspath)
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = archivesBaseName
			from components.java
		}
	}

	repositories {
		maven {
			name = "owlMaven"
			def repository = project.version.toString().contains("beta") || project.version.toString().contains("alpha") ? "snapshots" : "releases"
			url = "https://moehreag.duckdns.org/maven/"+repository
			credentials(PasswordCredentials)
			authentication {
				basic(BasicAuthentication)
			}
		}
	}
}
